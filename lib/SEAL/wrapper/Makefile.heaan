IDIR = ../include
HEAAN_IDIR = $(IDIR)/
SEAL_IDIR = $(IDIR)/include/SEAL-3.4/
#SEAL_IDIR = $(IDIR)/include/SEAL-3.6/
HELIB_IDIR = $(IDIR)/

CC = g++  -fPIC #-static 
CFLAGS= -I./  -I$(HEAAN_IDIR) -I$(SEAL_IDIR) -I$(HELIB_IDIR)  -std=c++17 -O2   #-I../common -g $(IDIR)/lib/libseal-3.4.a -pthread -lz

CFLAGS_RELEASE= -I./ -I$(IDIR) -I$(HEAAN_IDIR) -I$(SEAL_IDIR) -I$(HELIB_LDIR) -std=c++17 -O3 

#HEAAN_LDIR = ./HEAAN/lib
#SEAL_LDIR = ./SEAL/lib
#HELIB_LDIR = ./HElib/lib
ODIR=.
LDIR = ../lib 	#-L$(HEAAN_LDIR) -L$(SEAL_LDIR) -L$(HELIB_LDIR)

LIBS = -L$(LDIR) -lHEAAN -lhelib -lntl -lseal-3.4 -lgmp -lm -pthread  -lz
_LIBS = -lHEAAN -lhelib -lntl -lseal-3.4 -lgmp -lm -lz -pthread -static

BDIR =	./benchmarks
BFDIR =	./benchmark_framework
WDIR =	./wrappers
#_DEPS = $(BFDIR)/benchmark.h  $(BFDIR)/utilities.h $(WDIR)/HElibWrapper.h $(WDIR)/HEAANWrapper.h $(WDIR)/SEALWrapper.h $(BFDIR)/benchmark_seal.h $(BFDIR)/benchmark_helib.h
#_DEPS = benchmark.h  utilities.h HElibWrapper.h HEAANWrapper.h SEALWrapper.h benchmark_runner.h benchmark_seal.h benchmark_helib.h mapReduce.h mapReduceTest.h benchmark_runner.h
DEPS = $(_DEPS) #$(patsubst %,$(IDIR)/%,$(_DEPS))
#$(info  DEPS="$(DEPS)")
_OBJ =   HEAANWrapper.o #SEALWrapper.o #benchmarks.o ../common/utils.o

OBJ = $(patsubst %,$(ODIR)/%,$(_OBJ))
#$(info OBJ="$(OBJ)")

VPATH = $(BDIR):$(BFDIR):$(WDIR)

$(ODIR)/%.o: %.cpp  $(DEPS) 
	$(CC) -c -o $@ $< $(CFLAGS)
#$(CC) -shared -o $@ $^ $(CFLAGS) $(LIBS)
libheaanWrapper.a: $(OBJ)
	ar rcu  $@ $(_OBJ) 
	ranlib $@
#benchmark: $(OBJ)
#	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)
release: $(OBJ)
		$(CC) -c -o $@ $< $(CFLAGS_RELEASE)
		$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

.PHONY: clean

install:
	cp libheaanWrapper.a ../lib/
clean:
	rm -f $(ODIR)/*.o *~ core $(INCDIR)/*~ *.a